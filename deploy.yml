---
- hosts: galaxy-servers
  remote_user: galaxy
  vars_files:
    - vars.yml

  tasks:

  - name: Create the code directory
    file: group={{ project_user }} owner={{ project_user }} mode=755 state=directory path={{ project_home_dir }}/{{ project_dir }}/

  - name: Pull release_16.01 branch from the repository
    git: repo={{ project_repo_galaxyproject }} dest={{ project_home_dir }}/{{ project_dir }}/ accept_hostkey=True version=release_16.01
    when: repo == "release_16.01"

  - name: Pull release_16.04 branch from the repository
    git: repo={{ project_repo_galaxyproject }} dest={{ project_home_dir }}/{{ project_dir }}/ accept_hostkey=True version=release_16.04
    when: repo == "release_16.04"

  - name: Pull GalaxyProject dev branch from the repository
    git: repo={{ project_repo_galaxyproject }} dest={{ project_home_dir }}/{{ project_dir }}/ accept_hostkey=True version=dev
    when: repo == "gp-dev"

  - name: Pull default IAS sources from the repository
    git: repo={{ project_repo_mts }} dest={{ project_home_dir }}/{{ project_dir }}/ accept_hostkey=True
    when: repo == "mts-dev"

  - name: Upload configuration files
    copy: src=configs/{{ repo }}/{{ mode }}/galaxy/ dest={{ project_home_dir }}/{{ project_dir }}/config/

  - name: Create data folder
    file: path={{ project_home_dir }}/{{ project_data_dir }} state=directory

  - name: Create tools dir
    file: path={{ project_home_dir }}/{{ project_tools_dir }}/{{ project_tools_dep_dir }} state=directory

#  - name: Set virtual environment
#    shell: virtualenv --no-site-packages  {{ project_home_dir }}/{{ project_dir }}/.venv
#
#  - name: Upgrade Pip package
#    pip: name=pip virtualenv={{ project_home_dir}}/{{ project_dir }}/.venv  extra_args='--upgrade'
#
#  - name: Activate virtual environment
#    shell: . {{ project_home_dir }}/{{ project_dir }}/.venv/bin/activate
#
#  - name: Install python Pip packages
#    pip: name={{ item }} virtualenv={{ project_home_dir}}/{{ project_dir }}/.venv virtualenv_site_packages=no extra_args='--upgrade'
#    with_items: "{{ python_packages_pip }}"
#

  handlers:
    - include: handlers.yml
